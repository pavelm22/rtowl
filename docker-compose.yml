version: '3.8'
services:
  nginx:
    build:
      context: ./docker/nginx
    container_name: nginx
    volumes:
      - .:/var/www:rw
      - ./logs/nginx:/var/log/nginx/:rw
    ports:
      - 80:80
    restart: always
    depends_on:
      - php
  php:
    build:
      context: ./docker/php
      args:
        - PUID=${PUID}
        - PGID=${PGID}
        - INSTALL_XDEBUG=${INSTALL_XDEBUG}
    container_name: php
    restart: always
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    volumes:
      - .:/var/www
  postgres:
    build:
      context: ./docker/postgres
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data:rw
###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
